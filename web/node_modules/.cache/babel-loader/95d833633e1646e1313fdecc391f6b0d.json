{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\GitHub\\\\Happy-nlw03-omnistack\\\\web\\\\src\\\\contexts\\\\auth.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuth = () => {\n  _s();\n\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n};\n\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const loadStorageData = async () => {\n      const token = localStorage.getItem('@auth:token');\n      const user = localStorage.getItem('@auth:user');\n\n      if (user && token) {\n        api.defaults.headers['Authorization'] = `Bearer ${token}`;\n        setUser(JSON.parse(user));\n      }\n\n      setLoading(false);\n    };\n\n    loadStorageData();\n  }, []);\n\n  const storeAuthData = async (user, token, remember) => {\n    if (remember) {\n      localStorage.setItem('@auth:token', token);\n      localStorage.setItem('@auth:user', JSON.stringify(user));\n    }\n\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n    setLoading(false);\n    setUser(user);\n  };\n\n  const register = async credentials => {\n    setLoading(true);\n    api.post('register', credentials);\n  };\n\n  const signIn = async (credentials, remember) => {\n    setLoading(true);\n    api.post('login', credentials).then(response => storeAuthData(response.data, response.headers['Authorization'], remember));\n  };\n\n  const signOut = async () => {\n    localStorage.clear();\n    api.defaults.headers['Authorization'] = undefined;\n    setUser(undefined);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      loading,\n      signIn,\n      register,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"RY+QtDERCFRmELPUxVyQthT3f80=\");\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Happy-nlw03-omnistack/web/src/contexts/auth.tsx"],"names":["React","createContext","useState","useEffect","useContext","api","AuthContext","useAuth","context","Error","AuthProvider","children","loading","setLoading","user","setUser","loadStorageData","token","localStorage","getItem","defaults","headers","JSON","parse","storeAuthData","remember","setItem","stringify","register","credentials","post","signIn","then","response","data","signOut","clear","undefined","signed"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react'\r\n\r\nimport api from '../services/api'\r\n\r\nexport type User = {\r\n    id: number\r\n    name: string\r\n    email: string\r\n}\r\n\r\nexport type SignInCredentials = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type RegisterCredentials = {\r\n    name: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type AuthContextData = {\r\n    signed: boolean\r\n    loading: boolean\r\n    user?: User\r\n    signIn: (credentials: SignInCredentials, remember: boolean) => Promise<void>\r\n    register: (credentials: RegisterCredentials) => Promise<void>\r\n    signOut: () => Promise<void>\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext)\r\n\r\n    if (!context)\r\n        throw new Error('useAuth must be used within an AuthProvider')\r\n\r\n    return context\r\n}\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [user, setUser] = useState<User>()\r\n\r\n    useEffect(() => {\r\n        const loadStorageData = async () => {\r\n            const token = localStorage.getItem('@auth:token')\r\n            const user = localStorage.getItem('@auth:user')\r\n\r\n            if (user && token) {\r\n                api.defaults.headers['Authorization'] = `Bearer ${token}`\r\n\r\n                setUser(JSON.parse(user))\r\n            }\r\n\r\n            setLoading(false)\r\n        }\r\n\r\n        loadStorageData()\r\n    }, [])\r\n\r\n    const storeAuthData = async (user: User, token: string, remember: boolean) => {\r\n        if (remember) {\r\n            localStorage.setItem('@auth:token', token)\r\n            localStorage.setItem('@auth:user', JSON.stringify(user))\r\n        }\r\n\r\n        api.defaults.headers['Authorization'] = `Bearer ${token}`\r\n\r\n        setLoading(false)\r\n        setUser(user)\r\n    }\r\n\r\n    const register = async (credentials: RegisterCredentials) => {\r\n        setLoading(true)\r\n\r\n        api.post<User>('register', credentials)\r\n    }\r\n\r\n    const signIn = async (credentials: SignInCredentials, remember: boolean) => {\r\n        setLoading(true)\r\n\r\n        api.post<User>('login', credentials)\r\n            .then(response => storeAuthData(response.data, response.headers['Authorization'], remember))\r\n    }\r\n\r\n    const signOut = async () => {\r\n        localStorage.clear()\r\n\r\n        api.defaults.headers['Authorization'] = undefined\r\n        setUser(undefined)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ signed: !!user, user, loading, signIn, register, signOut }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}