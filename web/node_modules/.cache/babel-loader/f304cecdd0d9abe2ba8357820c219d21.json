{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\GitHub\\\\Happy-nlw03-omnistack\\\\web\\\\src\\\\pages\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { useAuth } from '../contexts/auth';\nimport logoImg from \"../../images/logo-2.svg\";\nimport '../styles/pages/register.css';\n\nconst Register = () => {\n  _s();\n\n  const {\n    register\n  } = useAuth();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    setDisabled(!email || !password);\n  }, [email, password]); // TODO: Prevent register to be called multiple times\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    register({\n      name,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImg,\n        alt: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Jequi\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Bahia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        className: \"back\",\n        children: /*#__PURE__*/_jsxDEV(FiArrowLeft, {\n          size: 20,\n          color: \"#15C3D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Fazer login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              name: \"name\",\n              autoComplete: \"name\",\n              maxLength: 255,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              autoComplete: \"email\",\n              maxLength: 255,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"about\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"new-password\",\n              maxLength: 255,\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: disabled,\n          className: \"confirm-button\",\n          type: \"submit\",\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"AB4yunD90UdBfZLg8ZmJv7g1jvA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/andre/Documents/GitHub/Happy-nlw03-omnistack/web/src/pages/Register.tsx"],"names":["React","useState","useEffect","Link","FiArrowLeft","useAuth","Register","register","name","setName","email","setEmail","password","setPassword","disabled","setDisabled","handleSubmit","e","preventDefault","logoImg","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\n\r\nimport { useAuth } from '../contexts/auth'\r\n\r\nimport logoImg from '../../images/logo-2.svg'\r\n\r\nimport '../styles/pages/register.css'\r\n\r\nconst Register: React.FC = () => {\r\n    const { register } = useAuth()\r\n\r\n    const [name, setName] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const [disabled, setDisabled] = useState<boolean>(true)\r\n\r\n    useEffect(() => {\r\n        setDisabled(!email || !password)\r\n    }, [email, password])\r\n\r\n    // TODO: Prevent register to be called multiple times\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n\r\n        register({ name, email, password })\r\n    }\r\n\r\n    return (\r\n        <div id='register'>\r\n            <div className='content-wrapper'>\r\n                <img src={logoImg} alt='Happy' />\r\n\r\n                <div className='location'>\r\n                    <strong>Jequié</strong>\r\n                    <span>Bahia</span>\r\n                </div>\r\n            </div>\r\n\r\n            <main>\r\n                <Link to='' className='back'>\r\n                    <FiArrowLeft size={20} color='#15C3D6' />\r\n                </Link>\r\n\r\n                <form onSubmit={handleSubmit} className='register-form'>\r\n                    <fieldset>\r\n                        <legend>Fazer login</legend>\r\n\r\n                        <div className='input-block'>\r\n                            <label htmlFor='email'>Name</label>\r\n                            <input id='name' name='name' autoComplete='name' maxLength={255} value={name} onChange={e => setName(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='input-block'>\r\n                            <label htmlFor='email'>E-mail</label>\r\n                            <input id='email' name='email' autoComplete='email' maxLength={255} value={email} onChange={e => setEmail(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='input-block'>\r\n                            <label htmlFor='about'>Senha</label>\r\n                            <input id='password' name='password' type='password' autoComplete='new-password' maxLength={255} value={password} onChange={e => setPassword(e.target.value)} />\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <button disabled={disabled} className='confirm-button' type='submit'>\r\n                        Confirmar\r\n                    </button>\r\n                </form>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}